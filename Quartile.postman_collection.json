{
	"info": {
		"_postman_id": "24f80f20-a150-4478-bb8c-28f56d11b666",
		"name": "Quatile",
		"description": "# ðŸš€ Get started here\n\nThis template guides you through CRUD operations (GET, POST, PUT, DELETE), variables, and tests.\n\n## ðŸ”– **How to use this template**\n\n#### **Step 1: Send requests**\n\nRESTful APIs allow you to perform CRUD operations using the POST, GET, PUT, and DELETE HTTP methods.\n\nThis collection contains each of these [request](https://learning.postman.com/docs/sending-requests/requests/) types. Open each request and click \"Send\" to see what happens.\n\n#### **Step 2: View responses**\n\nObserve the response tab for status code (200 OK), response time, and size.\n\n#### **Step 3: Send new Body data**\n\nUpdate or add new data in \"Body\" in the POST request. Typically, Body data is also used in PUT request.\n\n```\n{\n    \"name\": \"Add your name in the body\"\n}\n\n ```\n\n#### **Step 4: Update the variable**\n\nVariables enable you to store and reuse values in Postman. We have created a [variable](https://learning.postman.com/docs/sending-requests/variables/) called `base_url` with the sample request [https://postman-api-learner.glitch.me](https://postman-api-learner.glitch.me). Replace it with your API endpoint to customize this collection.\n\n#### **Step 5: Add tests in the \"Tests\" tab**\n\nTests help you confirm that your API is working as expected. You can write test scripts in JavaScript and view the output in the \"Test Results\" tab.\n\n<img src=\"https://content.pstmn.io/b5f280a7-4b09-48ec-857f-0a7ed99d7ef8/U2NyZWVuc2hvdCAyMDIzLTAzLTI3IGF0IDkuNDcuMjggUE0ucG5n\">\n\n## ðŸ’ª Pro tips\n\n- Use folders to group related requests and organize the collection.\n- Add more [scripts](https://learning.postman.com/docs/writing-scripts/intro-to-scripts/) in \"Tests\" to verify if the API works as expected and execute workflows.\n    \n\n## ðŸ’¡Related templates\n\n[API testing basics](https://go.postman.co/redirect/workspace?type=personal&collectionTemplateId=e9a37a28-055b-49cd-8c7e-97494a21eb54&sourceTemplateId=ddb19591-3097-41cf-82af-c84273e56719)  \n[API documentation](https://go.postman.co/redirect/workspace?type=personal&collectionTemplateId=e9c28f47-1253-44af-a2f3-20dce4da1f18&sourceTemplateId=ddb19591-3097-41cf-82af-c84273e56719)  \n[Authorization methods](https://go.postman.co/redirect/workspace?type=personal&collectionTemplateId=31a9a6ed-4cdf-4ced-984c-d12c9aec1c27&sourceTemplateId=ddb19591-3097-41cf-82af-c84273e56719)",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "14694225"
	},
	"item": [
		{
			"name": "Question1",
			"item": [
				{
					"name": "Companies",
					"item": [
						{
							"name": "Get companies",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://stores-management.azurewebsites.net/api/v1/companies",
									"protocol": "https",
									"host": [
										"stores-management",
										"azurewebsites",
										"net"
									],
									"path": [
										"api",
										"v1",
										"companies"
									]
								},
								"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
							},
							"response": []
						},
						{
							"name": "Get company",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://stores-management.azurewebsites.net/api/v1/companies/fada135e-be54-4ce3-8792-e423160c39d4",
									"protocol": "https",
									"host": [
										"stores-management",
										"azurewebsites",
										"net"
									],
									"path": [
										"api",
										"v1",
										"companies",
										"fada135e-be54-4ce3-8792-e423160c39d4"
									]
								},
								"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
							},
							"response": []
						},
						{
							"name": "Create company",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Successful POST request\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
											"});",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"Dummy company\",\n  \"stores\": [\n    {\n      \"name\": \"Dummy store\",\n      \"address\": {\n        \"streetName\": \"Dummy street name\",\n        \"cityName\": \"Dummy city name\",\n        \"regionName\": \"Dummy region name\",\n        \"postalCode\": \"Dummy postal code\",\n        \"country\": \"Dummy country\"\n      }\n    }\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://stores-management.azurewebsites.net/api/v1/companies",
									"protocol": "https",
									"host": [
										"stores-management",
										"azurewebsites",
										"net"
									],
									"path": [
										"api",
										"v1",
										"companies"
									]
								},
								"description": "This is a POST request, submitting data to an API via the request body. This request submits JSON data, and the data is reflected in the response.\n\nA successful POST request typically returns a `200 OK` or `201 Created` response code."
							},
							"response": []
						}
					]
				},
				{
					"name": "Stores",
					"item": [
						{
							"name": "Get stores",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://stores-management.azurewebsites.net/api/v1/stores",
									"protocol": "https",
									"host": [
										"stores-management",
										"azurewebsites",
										"net"
									],
									"path": [
										"api",
										"v1",
										"stores"
									]
								},
								"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
							},
							"response": []
						},
						{
							"name": "Get store",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://stores-management.azurewebsites.net/api/v1/stores/7261edc3-06f1-42e2-a1c4-41f503500386",
									"protocol": "https",
									"host": [
										"stores-management",
										"azurewebsites",
										"net"
									],
									"path": [
										"api",
										"v1",
										"stores",
										"7261edc3-06f1-42e2-a1c4-41f503500386"
									]
								},
								"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
							},
							"response": []
						},
						{
							"name": "Create store",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Successful POST request\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
											"});",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"companyId\": \"c79a623c-c5d9-45ea-86ec-781b6cf1f7e4\",\n    \"name\": \"Dummy store 2\",\n    \"address\": {\n        \"streetName\": \"Dummy street name\",\n        \"cityName\": \"Dummy city name\",\n        \"regionName\": \"Dummy region name\",\n        \"postalCode\": \"Dummy postal code\",\n        \"country\": \"Dummy country\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://stores-management.azurewebsites.net/api/v1/stores",
									"protocol": "https",
									"host": [
										"stores-management",
										"azurewebsites",
										"net"
									],
									"path": [
										"api",
										"v1",
										"stores"
									]
								},
								"description": "This is a POST request, submitting data to an API via the request body. This request submits JSON data, and the data is reflected in the response.\n\nA successful POST request typically returns a `200 OK` or `201 Created` response code."
							},
							"response": []
						},
						{
							"name": "Update store",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Successful PUT request\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([202]);",
											"});",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"companyId\": \"c79a623c-c5d9-45ea-86ec-781b6cf1f7e4\",\n    \"name\": \"Dummy store 2 Updated\",\n    \"address\": {\n        \"streetName\": \"Dummy street name\",\n        \"cityName\": \"Dummy city name\",\n        \"regionName\": \"Dummy region name\",\n        \"postalCode\": \"Dummy postal code\",\n        \"country\": \"Dummy country\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://stores-management.azurewebsites.net/api/v1/stores/03492025-0972-4b44-a3c1-1e656c8dddfc",
									"protocol": "https",
									"host": [
										"stores-management",
										"azurewebsites",
										"net"
									],
									"path": [
										"api",
										"v1",
										"stores",
										"03492025-0972-4b44-a3c1-1e656c8dddfc"
									]
								},
								"description": "This is a POST request, submitting data to an API via the request body. This request submits JSON data, and the data is reflected in the response.\n\nA successful POST request typically returns a `200 OK` or `201 Created` response code."
							},
							"response": []
						},
						{
							"name": "Delete store",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Successful DELETE request\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([204]);",
											"});",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "https://stores-management.azurewebsites.net/api/v1/stores/03492025-0972-4b44-a3c1-1e656c8dddfc",
									"protocol": "https",
									"host": [
										"stores-management",
										"azurewebsites",
										"net"
									],
									"path": [
										"api",
										"v1",
										"stores",
										"03492025-0972-4b44-a3c1-1e656c8dddfc"
									]
								},
								"description": "This is a POST request, submitting data to an API via the request body. This request submits JSON data, and the data is reflected in the response.\n\nA successful POST request typically returns a `200 OK` or `201 Created` response code."
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Question2",
			"item": [
				{
					"name": "Get proucts",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://productsmanagementfunctions20240505001436.azurewebsites.net/api/products?",
							"protocol": "https",
							"host": [
								"productsmanagementfunctions20240505001436",
								"azurewebsites",
								"net"
							],
							"path": [
								"api",
								"products"
							],
							"query": [
								{
									"key": "",
									"value": null
								}
							]
						},
						"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
					},
					"response": []
				},
				{
					"name": "Create product",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Whey Growth\",\n    \"description\": \"Whey protein 900g\",\n    \"price\": 129.99\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://productsmanagementfunctions20240505001436.azurewebsites.net/api/products?",
							"protocol": "https",
							"host": [
								"productsmanagementfunctions20240505001436",
								"azurewebsites",
								"net"
							],
							"path": [
								"api",
								"products"
							],
							"query": [
								{
									"key": "",
									"value": null
								}
							]
						},
						"description": "This is a POST request, submitting data to an API via the request body. This request submits JSON data, and the data is reflected in the response.\n\nA successful POST request typically returns a `200 OK` or `201 Created` response code."
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "id",
			"value": "1"
		},
		{
			"key": "base_url",
			"value": "https://postman-rest-api-learner.glitch.me/"
		}
	]
}
